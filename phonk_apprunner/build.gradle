//apply plugin: 'android'
apply plugin: 'com.android.library'


android {
    flavorDimensions "default_apprunner"

    compileSdkVersion 29

    defaultPublishConfig "normalrunnerDebug"
    // defaultPublishConfig "extendedrunnerDebug"
    publishNonDefault true

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29

        versionCode 120
        versionName "1.2.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    aaptOptions {
        noCompress "tflite"
    }

    buildTypes {
        release {
 			minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }


    dexOptions {
        jumboMode true
    }
}


repositories {
    maven { url 'https://github.com/kshoji/USB-MIDI-Driver/raw/master/MIDIDriver/snapshots' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
    maven { url 'http://maven.google.com'}

    mavenCentral()
    jcenter()

    flatDir { dirs 'libs' }
}


dependencies {

    // api fileTree(dir: 'libs', include: ['*.jar'])

    // android support
    api "androidx.appcompat:appcompat:1.1.0"
    api "androidx.recyclerview:recyclerview:1.1.0"
    api "androidx.cardview:cardview:1.0.0"
    api "androidx.palette:palette:1.0.0"
    api "com.google.android.material:material:1.1.0"
    api "androidx.browser:browser:1.2.0"

    // some of the apache libs collide with the ones in Android, better to include them as jars
    // api files('libs/commons-lang3-3.1.jar')
    api files('libs/commons-logging-1.1.3.jar')
    api files('libs/commons-net-3.0.1.jar')
    api files('libs/commons-codec-1.10.jar')
    api files('libs/commons-io-2.4.jar')
    api files('libs/httpclient-4.3.4.jar')
    api files('libs/httpclient-cache-4.3.4.jar')
    api files('libs/httpcore-4.3.2.jar')
    api files('libs/httpmime-4.3.4.jar')
    api 'org.greenrobot:eventbus:3.2.0'                     //
    api files('libs/ftpserver-core-1.0.6.jar')
    api files('libs/mina-core-2.0.4.jar')
    api 'org.apache.commons:commons-lang3:3.5'

    api 'org.mozilla:rhino:1.7.12'                         //
    implementation 'com.eclipsesource.j2v8:j2v8:6.1.0@aar'

    // network
    api files('libs/java_websocket.jar')
    api files('libs/android-websockets.jar')
    api files('libs/mail.jar')
    api files('libs/activation.jar') //part of mail
    api files('libs/additionnal.jar') //part of mail
    api 'de.sciss:netutil:1.0.0'                            //
    api 'org.fusesource.mqtt-client:mqtt-client:1.12'       //
    api 'org.nanohttpd:nanohttpd:2.3.1'
    api group: 'com.jcraft', name: 'jsch', version: '0.1.54'
    implementation 'com.github.weliem:blessed-android:1.18'

    //media
    api 'org.puredata.android:pd-core:1.1.0'
    api files('libs/processing_core.jar')
    api files('libs/processing_cardboard.jar')
    // api files('libs/gvr-audio.jar')
    // api files('libs/gvr-base.jar')
    // api files('libs/gvr-common.jar')
    api 'com.github.japgolly.android:svg-android:2.0.6' //'files('libs/androidsvg-1.2.1.jar')

    // osmdroid
    api 'org.osmdroid:osmdroid-android:6.1.6'
    // api 'com.github.MKergall.osmbonuspack:OSMBonusPack:v5.7'

    // hardware stuff
    api files('libs/ioiolibaccessory.jar')
    api files('libs/ioiolibandroid.jar')
    api files('libs/ioiolibbt.jar')
    implementation 'com.github.felHR85:UsbSerial:6.1.0'

    api 'jp.kshoji:midi-driver:0.1.4:@aar'

    // other libs
    api 'net.lingala.zip4j:zip4j:1.3.2'                     //
    api 'com.google.code.gson:gson:2.8.5'                   //
    //api files('libs/slf4j-android-1.7.6.jar')
    //api files('libs/slf4j-api-1.7.6.jar')

    // https://mvnrepository.com/artifact/com.google.zxing/core
    api group: 'com.google.zxing', name: 'core', version: '3.3.0' //

    // https://mvnrepository.com/artifact/com.google.zxing/android-core
    api group: 'com.google.zxing', name: 'android-core', version: '3.3.0' //

    api 'com.squareup.okhttp3:okhttp:3.10.0' //
    api 'com.squareup.picasso:picasso:2.5.2' //

    implementation project(path: ':transfer_api')
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    // https://developer.android.com/jetpack/androidx/releases/lifecycle
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    def camerax_version = "1.0.0-beta02"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
}


// The code below downloads a transfer learning model used in the example app automatically.
// Remove it if you are using your own model!

def modelUrl = 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/transfer_learning_mobilenet_v2_100_224x224_quant_softmax_4_sgd.zip'
def modelArchivePath = "${buildDir}/model.zip"
def modelTargetLocation = 'src/main/assets/model'

task downloadModel(type: DefaultTask) {
  doFirst {
    println "Downloading and unpacking the model..."
    mkdir project.buildDir
  }

  doLast {
    ant.mkdir(dir: modelTargetLocation)
    // If you want to use your own models rather than pre-built models,
    // comment out the following three lines.
    ant.get(src: modelUrl, dest: modelArchivePath)
    ant.unzip(src: modelArchivePath, dest: modelTargetLocation)
    ant.delete(file: modelArchivePath)
  }
}

preBuild.dependsOn downloadModel

